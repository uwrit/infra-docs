{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Onboard Welcome to Research IT Please select either the SSH or VPN option to access your application and/or machine. Set up using SSH Set up using a VPN","title":"Onboard"},{"location":"#onboard","text":"","title":"Onboard"},{"location":"#welcome-to-research-it","text":"Please select either the SSH or VPN option to access your application and/or machine. Set up using SSH Set up using a VPN","title":"Welcome to Research IT"},{"location":"access/ssh/","text":"Set up using SSH In order to access services within the Research IT network, you must setup an SSH tunnel to pass your traffic through to the protected server. Windows SSH Command Prompt Install Windows users should use the \"Git Bash\" shell to install the needed SSH tools to complete the steps below and get a Linux style command prompt. Git's toolset isn't installed by default on Windows and so you will need to download it. Install Git Tools: https://git-scm.com/downloads Ensure that you install \"Git Bash\" and open it to get a command prompt. Getting Started SSH Keypair Creation (on the command line) Create a .ssh folder in your user's home folder, and then store your key. Open up the Terminal on Linux/Mac OS or Command Prompt on Windows. Create an SSH configuration directory: mkdir ~/.ssh Create a new SSH keypair: ssh-keygen -t ed25519 -f ~/.ssh/<my_private_sshkey> Note: Ensure that you enter a strong password to protect the keypair and protect that password. Once the key is created, send the contents of the public key text file (my_private_sshkey.pub in the example above) to rithelp@uw.edu with your name, UW NetID, and systems you request access to. Tip : Output contents of files to the screen using the cat command: cat ~/.ssh/my_private_sshkey.pub Note: The Research IT group will put that public key file on each server you need access to. You won't be able to login to your server until we've applied this public key to your profile. SSH Config File Customization Create a file called config in the .ssh folder which will save your connections. In the command prompt, run touch ~/.ssh/config Edit the ~/.ssh/config file using an editor and add the following text: # Read more about SSH config files: https://linux.die.net/man/5/ssh_config IdentityFile ~/.ssh/<my_private_sshkey> User <uwnetid> # remote bastion required in order to access other machines host remote HostName remote.rit.uw.edu # ssh proxy example host <example-host> HostName <example-host>.rit.uw.edu ProxyJump remote # port forward example - mostly used for database machines host <db-example> HostName <db-host>.rit.uw.edu ProxyJump remote LocalForward <local-port> localhost:<db-port> Note: The above \"port forward example\" forwards local-port to the remote db-port on the internal server db-example.rit.uw.edu. Examples Connecting Directly To log in to any machine (including db machines), run: ssh <example-host> Note: You will be prompted twice to enter your SSH key password. After a successful login, you should be able to use the machine through the command line. Port Forwarding Once logged in to the port forwarding tunnel, your command line window will show that you are logged into db-example . username@db-host $ Note: The forwarded port will always be connected to via 'localhost' or 127.0.0.1. After connecting with SSH, use appropriate DB software and connect to localhost: specified in the .ssh/config file above. You won't be using this command line window any further, but you do need to leave this window open. When you are done working you will return to this window to exit out of the tunnel connection. If you close the command line or \"Git Bash\" window, it will close your ssh tunnel session.","title":"Set up using SSH"},{"location":"access/ssh/#set-up-using-ssh","text":"In order to access services within the Research IT network, you must setup an SSH tunnel to pass your traffic through to the protected server. Windows SSH Command Prompt Install Windows users should use the \"Git Bash\" shell to install the needed SSH tools to complete the steps below and get a Linux style command prompt. Git's toolset isn't installed by default on Windows and so you will need to download it. Install Git Tools: https://git-scm.com/downloads Ensure that you install \"Git Bash\" and open it to get a command prompt.","title":"Set up using SSH"},{"location":"access/ssh/#getting-started","text":"","title":"Getting Started"},{"location":"access/ssh/#ssh-keypair-creation-on-the-command-line","text":"Create a .ssh folder in your user's home folder, and then store your key. Open up the Terminal on Linux/Mac OS or Command Prompt on Windows. Create an SSH configuration directory: mkdir ~/.ssh Create a new SSH keypair: ssh-keygen -t ed25519 -f ~/.ssh/<my_private_sshkey> Note: Ensure that you enter a strong password to protect the keypair and protect that password. Once the key is created, send the contents of the public key text file (my_private_sshkey.pub in the example above) to rithelp@uw.edu with your name, UW NetID, and systems you request access to. Tip : Output contents of files to the screen using the cat command: cat ~/.ssh/my_private_sshkey.pub Note: The Research IT group will put that public key file on each server you need access to. You won't be able to login to your server until we've applied this public key to your profile.","title":"SSH Keypair Creation (on the command line)"},{"location":"access/ssh/#ssh-config-file-customization","text":"Create a file called config in the .ssh folder which will save your connections. In the command prompt, run touch ~/.ssh/config Edit the ~/.ssh/config file using an editor and add the following text: # Read more about SSH config files: https://linux.die.net/man/5/ssh_config IdentityFile ~/.ssh/<my_private_sshkey> User <uwnetid> # remote bastion required in order to access other machines host remote HostName remote.rit.uw.edu # ssh proxy example host <example-host> HostName <example-host>.rit.uw.edu ProxyJump remote # port forward example - mostly used for database machines host <db-example> HostName <db-host>.rit.uw.edu ProxyJump remote LocalForward <local-port> localhost:<db-port> Note: The above \"port forward example\" forwards local-port to the remote db-port on the internal server db-example.rit.uw.edu.","title":"SSH Config File Customization"},{"location":"access/ssh/#examples","text":"","title":"Examples"},{"location":"access/ssh/#connecting-directly","text":"To log in to any machine (including db machines), run: ssh <example-host> Note: You will be prompted twice to enter your SSH key password. After a successful login, you should be able to use the machine through the command line.","title":"Connecting Directly"},{"location":"access/ssh/#port-forwarding","text":"Once logged in to the port forwarding tunnel, your command line window will show that you are logged into db-example . username@db-host $ Note: The forwarded port will always be connected to via 'localhost' or 127.0.0.1. After connecting with SSH, use appropriate DB software and connect to localhost: specified in the .ssh/config file above. You won't be using this command line window any further, but you do need to leave this window open. When you are done working you will return to this window to exit out of the tunnel connection. If you close the command line or \"Git Bash\" window, it will close your ssh tunnel session.","title":"Port Forwarding"},{"location":"access/vpn/","text":"Set up using a VPN The Research IT VPN is available as an alternative option for our users to connect to our infrastructure. It is commonly used to connect to database machines. Getting Started Download Husky OnNet In order to connect to our VPN, you will need to download Husky OnNet. Here are some helpful links: Husky OnNet Overview Download Husky OnNet Using Husky OnNet RIT VPN Configuration Once you have the Husky OnNet application downloaded and running, go the the server options and select Add New Server . Enter the following server address in your window and click Verify : https://dept-huskyonnet.uw.edu/uwrit After the server address has been verified: Select Add to add it to your list of servers. Select Add and Connect to add it to your list of servers and connect to our VPN. It will then direct you to a UW login page. You should be connected to our VPN once you have successfully logged in with your UW NetID. You can now use your application to connect to our databases.","title":"Set up using a VPN"},{"location":"access/vpn/#set-up-using-a-vpn","text":"The Research IT VPN is available as an alternative option for our users to connect to our infrastructure. It is commonly used to connect to database machines.","title":"Set up using a VPN"},{"location":"access/vpn/#getting-started","text":"","title":"Getting Started"},{"location":"access/vpn/#download-husky-onnet","text":"In order to connect to our VPN, you will need to download Husky OnNet. Here are some helpful links: Husky OnNet Overview Download Husky OnNet Using Husky OnNet","title":"Download Husky OnNet"},{"location":"access/vpn/#rit-vpn-configuration","text":"Once you have the Husky OnNet application downloaded and running, go the the server options and select Add New Server . Enter the following server address in your window and click Verify : https://dept-huskyonnet.uw.edu/uwrit After the server address has been verified: Select Add to add it to your list of servers. Select Add and Connect to add it to your list of servers and connect to our VPN. It will then direct you to a UW login page. You should be connected to our VPN once you have successfully logged in with your UW NetID. You can now use your application to connect to our databases.","title":"RIT VPN Configuration"}]}